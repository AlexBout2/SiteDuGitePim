document.addEventListener('DOMContentLoaded', function () {
  // CODE #1: Gestion du bouton de validation du num√©ro de s√©jour et affichage du formulaire
  const resaCheckButton = document.querySelector(".sejour-validation");
  if (resaCheckButton) {
    resaCheckButton.addEventListener("click", function (event) {
      event.preventDefault();
      const fullFormContainer = document.querySelector(".fullForm");
      if (fullFormContainer && fullFormContainer.innerHTML.trim() === "") {
        console.log("Container trouv√© et vide");
        const formHTML = `
              <div class="col-md-8 mx-auto text-center col-">
                  <h2>R√©servation de randonn√©e √©questre</h2>
                  <form class="reservation-form">
                      <!-- S√©lection du cheval -->
                      <div class="form-group mb-3">
                          <label for="selected-horse">Cheval s√©lectionn√©</label>
                          <input
                              type="text"
                              class="form-control"
                              id="selected-horse"
                              readonly
                              placeholder="Cliquez sur un cheval ci-dessous"
                          />
                      </div>

                      <div class="form-group mb-3">
                          <label for="date">Date de la randonn√©e</label>
                          <input type="date" class="form-control" id="date" required />
                      </div>

                      <div class="form-group mb-3">
                          <label for="periode">P√©riode</label>
                          <select class="form-control" id="periode" required>
                              <option value="">S√©lectionnez une p√©riode</option>
                              <option value="matin">Matin de 9h √† 11h avec Emma</option>
                              <option value="aprem">Apr√®s-midi de 14h √† 16h avec Lucas</option>
                          </select>
                      </div>

                      <button type="submit" class="btn btn-secondary-custom">R√©server</button>
                  </form>

                  <!-- Calendrier des disponibilit√©s -->

              </div>
              `;
        fullFormContainer.innerHTML = formHTML;
        console.log("Formulaire inject√© avec succ√®s");

        // IMPORTANT: Initialiser les fonctionnalit√©s du formulaire apr√®s l'avoir inject√©
        initFormFunctionality();
      }
    });
  } else {
    console.log("Bouton non trouv√©");
  }

  // CODE #2: Fonction pour initialiser les fonctionnalit√©s du formulaire
  function initFormFunctionality() {
    // S√©lection des √©l√©ments (apr√®s qu'ils soient inject√©s dans le DOM)
    const horseCards = document.querySelectorAll('.horse-card');
    const selectedHorseInput = document.getElementById('selected-horse');
    const reservationForm = document.querySelector('.reservation-form');
    const dateInput = document.getElementById('date');
    const reservationNumber = document.getElementById('reservation-number');
    const periodeSelect = document.getElementById('periode');

    // V√©rification que l'√©l√©ment meteoToast existe avant de l'initialiser
    const meteoToastElement = document.getElementById('meteoToast');
    let meteoToast = null;
    if (meteoToastElement) {
      meteoToast = new bootstrap.Toast(meteoToastElement, {
        autohide: false
      });
    }

    // Configuration de la date minimum (aujourd'hui)
    const today = new Date().toISOString().split('T')[0];
    if (dateInput) {
      dateInput.min = today;

      // √âcouteur d'√©v√©nement pour le changement de date
      dateInput.addEventListener('change', function () {
        if (this.value && typeof updateMeteo === 'function') {
          updateMeteo(this.value);
        }
      });
    }

    // Gestion de la s√©lection des chevaux
    if (horseCards && horseCards.length > 0) {
      horseCards.forEach(card => {
        card.addEventListener('click', function () {
          document.querySelector('.horse-card.selected')?.classList.remove('selected');
          this.classList.add('selected');
          const horseName = this.querySelector('p').textContent;
          selectedHorseInput.value = horseName;
          reservationForm.scrollIntoView({
            behavior: 'smooth',
            block: 'center'
          });
        });
      });
    }

    // Validation du formulaire
    if (reservationForm) {
      reservationForm.addEventListener('submit', function (e) {
        e.preventDefault();

        if (reservationNumber && !reservationNumber.value) {
          alert('Veuillez entrer votre num√©ro de r√©servation du g√Æte');
          reservationNumber.focus();
          return;
        }

        if (!selectedHorseInput.value) {
          alert('Veuillez s√©lectionner un cheval');
          return;
        }

        if (!dateInput.value) {
          alert('Veuillez s√©lectionner une date');
          dateInput.focus();
          return;
        }

        if (!periodeSelect.value) {
          alert('Veuillez s√©lectionner une p√©riode');
          periodeSelect.focus();
          return;
        }

        // V√©rification des conditions m√©t√©o
        const meteoAlert = document.querySelector('.alert-warning');
        if (meteoAlert) {
          if (!confirm('Les conditions m√©t√©o ne sont pas optimales pour cette date. Souhaitez-vous tout de m√™me continuer ?')) {
            return;
          }
        }

        const reservationData = {
          reservationNumber: reservationNumber ? reservationNumber.value : "Non sp√©cifi√©",
          horse: selectedHorseInput.value,
          date: dateInput.value,
          periode: periodeSelect.value
        };

        console.log('Donn√©es de r√©servation:', reservationData);
        alert('R√©servation enregistr√©e avec succ√®s !');
      });
    }
  }

  // D√©finition de la fonction updateMeteo 
  // (Je remarque qu'elle semble incompl√®te dans votre code original)
  function updateMeteo(dateStr) {
    // Conversion de la cha√Æne de date en objet Date
    const date = new Date(dateStr);

    // Formater la date
    const options = { weekday: 'long', day: 'numeric', month: 'long' };
    const formattedDate = date.toLocaleDateString('fr-FR', options);

    // Simuler diff√©rentes conditions m√©t√©o
    const conditions = [
      { icon: '‚òÄÔ∏è', desc: 'Ensoleill√©', temp: '22¬∞C' },
      { icon: '‚õÖ', desc: 'Partiellement nuageux', temp: '18¬∞C' },
      { icon: '‚òÅÔ∏è', desc: 'Nuageux', temp: '16¬∞C' },
      { icon: 'üåßÔ∏è', desc: 'Pluvieux', temp: '14¬∞C' },
      { icon: '‚õàÔ∏è', desc: 'Orageux', temp: '15¬∞C' }
    ];

    // Utiliser la date pour s√©lectionner une condition (simulation)
    const dayIndex = date.getDate() % conditions.length;
    const condition = conditions[dayIndex];

    // Mettre √† jour le contenu du toast
    const meteoBody = document.querySelector('#meteoToast .toast-body');
    if (meteoBody) {
      meteoBody.innerHTML = `
              <div class="meteo-content">
                  <h5 class="mb-2">Pr√©visions pour le ${formattedDate}</h5>
                  <div class="d-flex align-items-center">
                      <span class="meteo-icon me-3">${condition.icon}</span>
                      <div>
                          <p class="mb-1">${condition.desc}</p>
                          <p class="mb-0">Temp√©rature: ${condition.temp}</p>
                      </div>
                  </div>
                  ${condition.desc === 'Pluvieux' || condition.desc === 'Orageux' ?
          '<div class="alert alert-warning mt-2 mb-0">‚ö†Ô∏è Conditions d√©favorables pour la randonn√©e</div>' :
          '<div class="alert alert-success mt-2 mb-0">‚úÖ Conditions favorables pour la randonn√©e</div>'}
              </div>
          `;

      // Afficher le toast
      const meteoToastElement = document.getElementById('meteoToast');
      if (meteoToastElement) {
        const meteoToast = bootstrap.Toast.getInstance(meteoToastElement) ||
          new bootstrap.Toast(meteoToastElement, { autohide: false });
        meteoToast.show();
      }
    }
  }

  // V√©rifier si le formulaire est d√©j√† affich√© par d√©faut (sans clic sur le bouton)
  const reservationForm = document.querySelector('.reservation-form');
  if (reservationForm) {
    initFormFunctionality();
  }
});
